train1 <- read.csv("pml-training.csv", header = T, na.strings= c("NA",""," "))
test1 <- read.csv("pml-testing.csv", header = T, na.strings= c("NA",""," "))
getwd()
setwd("C:/Users/v226473/Desktop/Coursera/Practical Machine Learning")
getwd()
train1 <- read.csv("pml-training.csv", header = T, na.strings= c("NA",""," "))
getwd()
setwd("C:/Users/v226473/Desktop/Coursera/Practical Machine Learning/Project")
train1 <- read.csv("pml-training.csv", header = T, na.strings= c("NA",""," "))
test1 <- read.csv("pml-testing.csv", header = T, na.strings= c("NA",""," "))
dim(train1)
dim(test1)
NA_train1 <- apply(train1, 2, function(i) {sum(is.na(i))})
train2 <- train1[,which(NA_train1 == 0)]
train3 <- train2[8:length(train2)]
NA_test1 <- apply(test1, 2, function(i) {sum(is.na(i))})
test2 <- test1[,which(NA_test1 == 0)]
test3 <- test2[8:length(test2)]
dim(train3)
dim(test3)
View(test2)
tes3t$class
test3$class
test3$classe
str(test2)
str(train2)
train3$classe
train3$class
dim(train3)
dim(test3)
library(caret)
inTrain <- createDataPartition(y=train3$classe, p = 0.75, list = FALSE)
training <- train3[inTrain, ]
validation <- train3[-inTrain, ]
library(randomForest)
modelFit <- randomForest(classe ~ ., data=training)
modelFit
model_cross_validation <- predict(modelFit, validation)
str(model_cross_validation)
length(model_cross_validation)
model_crossValidation <- predict(modelFit, validation)
model_crossValidation
validation$classe
model_crossValidation
validation$classe
confusionMatrix(validation$classe, model_crossValidation)
model_testing <- predict(modelFit, test3
)
model_testing
